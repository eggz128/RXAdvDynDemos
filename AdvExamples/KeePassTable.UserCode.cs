///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace AdvExamples
{
    public partial class KeePassTable
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void KeepassLoopTable()
        {
            
        	Row MyRow = "/form[@controlname='MainForm']//table[@controlname='m_lvEntries']/row[@index='0']";
        	
        	for (int looper = 0; looper < 3; looper++) {
        		MyRow = "/form[@controlname='MainForm']//table[@controlname='m_lvEntries']/row[@index='" + looper + "']";
        		MyRow.Click();
        		
        	}
        	
        }

        public void KeepassLoopTableCollection()
        {
            Table KeepassTable = "/form[@controlname='MainForm']//table[@controlname='m_lvEntries']";
            
            var allRows = KeepassTable.Rows;
            int totalRows = allRows.Count;
            
//            for (int i = 0; i < totalRows; i++) { 
//            	Row MyRow =  "/form[@controlname='MainForm']//table[@controlname='m_lvEntries']/row[@index='" + i + "']";
//            	MyRow.Click();
//            }
            
            foreach (var row in allRows) {
            	row.Click();
            }


        }

        public void ExtremeExample()
        {
            Table KeepassTable = "/form[@controlname='MainForm']//table[@controlname='m_lvEntries']";
            
            var allRows = KeepassTable.Rows;
            
            //Cant click a collection object directly, but can access as if an array
            //allRows[1].Cells[1].Click(); //Click second row, second cell (Arrays count from 0 )
            
            
            //Click all the cells  across all rows in a table
            foreach (Ranorex.Row row in allRows) { //Loop over all rows

            	
            	
            		
            		
            	IList<Ranorex.Cell> cellsInRow = row.Cells; //Collect the cells for the current row
            	
            	foreach (Ranorex.Cell cell in cellsInRow) { //Loop over cells in an individual row
            		
            		cell.Click();
            	}
            
            }
        }

        public void ChildrenOfRow()
        {
            Row FirstRow = "/form[@controlname='MainForm']//table[@controlname='m_lvEntries']/row[1]";
            
            var RowChildren = FirstRow.Children; //Returns list of Ranorex.Unknown
            RowChildren[2].Click();
            
            
            
            foreach (var child in RowChildren) {
            	Report.Info(child.As<Ranorex.Cell>().Text); //Convert unknown to Cell to allow Text property access
            }
            
           
        }

        public void ChildrenOfTableThatAreCells()
        {
            Table KeepassTable = "/form[@controlname='MainForm']//table[@controlname='m_lvEntries']";
            
//            var cells = KeepassTable.FindChildren<Ranorex.Cell>(); //Empty list. Cells are inside rows!
            
			var cells = KeepassTable.FindDescendants<Ranorex.Cell>();
            
            foreach (var cell in cells) {
            	cell.Click();
            } //Not exactly what you expected huh? :) 
        }

    }
}
